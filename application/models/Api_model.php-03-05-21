<?php 
class Api_model extends CI_Model {
	public function __construct() {
		// Call the CI_Model constructor
		parent::__construct();
	}
	
	public function validate_login($username, $password, $login_ip, $login_time) {
		$this->db->select('*');
		$this->db->from('register_users');
		$this->db->where('email', $username);
		$query = $this->db->get();
		$result = $query->row();
		if(!empty($result)) {
			$this->db->select('*');
			$this->db->from('register_users');
			$this->db->where(array('email' => $username, 'password' => md5($password)));
			$query = $this->db->get();
			$result = $query->row();
			if(!empty($result)) {
				if($result->active == 1) {
					return $result;
				} else {
					return 'inactive';
				}
			} else {
				return 'password_incorrect';
			}
		} else {
			return 'not_found';
		}
	}
	
	public function common($table_name='',$field=array(),$where=array(),$where_or=array(),$like=array(),$like_or=array(),$order=array(),$start='',$end='',$where_in_array=array())
	{
		if(trim($table_name))
		{
			if(count($field)>0)
			{
				 $field=implode(',',$field);
			}
			else
			{
				$field='*';
			}
			
			$this->db->select($field);  
			$this->db->from($table_name); 
			
			if(count($where)>0)
			{
				foreach($where as $key=>$val)
				{
					if(trim($val))
					{
						$this->db->where($key,$val);
					} 
				}
			}
			
			
			if(count($where_or)>0)
			{
				foreach($where_or as $key=>$val)
				{
					if(trim($val))
					{
						$this->db->or_where($key,$val);
					} 
				}
			}
			
			if(count($order)>0)
			{
				foreach($order as $key=>$val)
				{
					if(trim($val))
					{
						$this->db->order_by($key,$val);
					} 
				}
			
			}
			
			if(count($like)>0)
			{
				foreach($like as $key=>$val)
				{
					if(trim($val))
					{
					   $this->db->like($key,$val);
					 
					} 
				}
			}
			
			
			if($end)
			{
				$this->db->limit($end,$start);
			}
			
			if(count($where_in_array)>0)
			{
				$this->db->where_in('user_id', $where_in_array);
			}
			 
			$query = $this->db->get();
			$resultResponse=$query->result();
			return $resultResponse;
			}
			else
			{
					 echo 'Table name should not be empty';exit;
			}
	
	   }
	   
	public function getcategories(){
		$this->db->select('*');
		$this->db->from('category');
		$this->db->where('status', '1');
		$query = $this->db->get();
		$result = $query->result_array();	
		foreach($result as $key=>$results){
			$catid = $results['parent_id'];
			if($catid > 0){
				$this->db->select('*');
				$this->db->from('category');
			 	$this->db->where('cat_id',$catid );
			    $res = $this->db->get();
			    $re = $res->row();
	            $parentcatname = $re->name;
			}else{
				$parentcatname = $results["name"];
			}
			$result[$key]['parentcatname'] = $parentcatname;
			$result[$key]['categoryimgstat'] = $this->config->item('base_url')."uploads/".$results['category_image'];    
		}

		if(!empty($result)) {
			return $result;
		} else {
			return 'no data found';
		}	
	}
	
	public function getproducts(){
		$this->db->select('*');
		$this->db->from('product');
		$this->db->where('status', '1');
		$query = $this->db->get();
		$result = $query->result_array();	
		foreach($result as $key=>$results){
			$productid = $results['product_id'];
			if($productid > 0){
				$this->db->select('pc.category_id, c.name as cat_name, c.description as cat_description');
				$this->db->from('product_category pc');
				$this->db->join('category c', 'pc.category_id = c.cat_id');
			 	$this->db->where('pc.product_id',$productid );
			    $res = $this->db->get();
			    $re = $res->result_array();
	            $parentcatid = $re;
			}else{
				$parentcatid = '';
			}
			if($results['brand_id'] > 0){
				$this->db->select('b.brand_id, b.name as brand_name, b.description as brand_description');
				$this->db->from('brand b');
				//$this->db->join('category c', 'b.category_id = c.cat_id');
			 	$this->db->where('b.brand_id',$results['brand_id'] );
				$res_brand = $this->db->get();
			    $re_brand = $res_brand->result_array();
				
				$brandDetails = $re_brand;
			} else {
				$brandDetails = '';
			}
			
			$this->db->select('*');
			$this->db->from('product_gallery_image');
			$this->db->where('product_id', $productid);
			$query = $this->db->get();
			$result_gallery = $query->result_array();
			
			$arrGalleryImages = array();
			if(!empty($result_gallery)) {
			foreach($result_gallery as $k => $res) {
				array_push($arrGalleryImages, $this->config->item('base_url')."uploads/product/" . $res['product_image']);
				}
			}
			
			
			$result[$key]['brand_details'] = $brandDetails;
			$result[$key]['cat_details'] = $parentcatid;
			$result[$key]['productcatimg'] = $this->config->item('base_url')."uploads/product/".$results['product_image'];
			$result[$key]['gallery_images'] = $arrGalleryImages; 
  
		}

		if(!empty($result)) {
			return $result;
		} else {
			return 'no data found';
		}	
	}
}